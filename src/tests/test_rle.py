#! /usr/bin/env python3
# -*- encoding: utf-8 -*-
# UI Lab Inc. Arthur Amshukov
#
import unittest
from art.framework.core.compression.pf.pf import Pf


class Test(unittest.TestCase):
    def test_rle_success(self):
        bits = '1010111000'
        print(bits)
        rle_encoded, max_v = Pf.rle_encode(bits)
        print(f'rle_encode len: {len(rle_encoded)}, max value: {max_v}')
        print(rle_encoded)
        rle_decoded = Pf.rle_decode(rle_encoded, max_v, bits[0] == '0')
        rle_decoded = list(map(lambda e: str(e), rle_decoded))
        rle_decoded = ''.join(rle_decoded)
        print(rle_decoded)
        assert rle_decoded == bits

    def test_rle2_success(self):
        bitsnoqa
        print(bits)
        rle_encoded, max_v = Pf.rle_encode(bits)
        print(f'rle_encode len: {len(rle_encoded)}, max value: {max_v}')
        print(rle_encoded)
        rle_decoded = Pf.rle_decode(rle_encoded, max_v, bits[0] == '0')
        rle_decoded = list(map(lambda e: str(e), rle_decoded))
        rle_decoded = ''.join(rle_decoded)
        print(rle_decoded)
        assert rle_decoded == bits


if __name__ == '__main__':
    """
    """
    unittest.main()
